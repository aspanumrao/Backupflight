// <auto-generated />
using System;
using Flight.Service.FlightSearchAPI.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flight.Service.FlightSearchAPI.Migrations
{
    [DbContext(typeof(FlightSearchDbContext))]
    partial class FlightSearchDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Flight.Service.FlightSearchAPI.Model.FlightSearchTbl", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("FlightLogo");

                    b.Property<string>("FlightNo");

                    b.Property<string>("From");

                    b.Property<bool>("IsFlightBlock");

                    b.Property<bool>("OneWay");

                    b.Property<double>("Price");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<bool>("RoundWay");

                    b.Property<string>("To");

                    b.HasKey("FlightId");

                    b.ToTable("flightSearchTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
